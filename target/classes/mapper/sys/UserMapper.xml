<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.et.auditServer.modules.sys.dao.UserDao">

    <resultMap id="BaseResultMap" type="com.et.auditServer.modules.sys.entity.User">
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        *
        FROM sys_user
        where
        1=1
        <if test="userName != null and  userName !='' ">
            and user_name = #{userName}
        </if>
        limit 1
    </select>

    <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String">
        select * from sys_user where  user_name=#{userName}
    </select>

    <insert id="insertUser">
        insert into sys_user
		(
			user_name,
			user_phone,
			user_email,
			user_password
		)
		VALUES
		(
			#{userName},
			#{userPhone},
			#{userEmail},
			#{userPassword}
		)
    </insert>

    <update id="updateUser">
        update sys_user
        <set>
            <if test="userName != null and userName != ''">
                user_name=#{userName},
            </if>
            <if test="userPhone != null and userPhone != ''">
                user_phone=#{userPhone},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password=#{userPassword},
            </if>
        </set>
        where user_name=#{userName}
    </update>

    <delete id="deleteUser">
    	delete from student where user_name = #{userName}
  	</delete>

    <select id="getUserByPasswordUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select * from sys_user where user_name=#{userName} and user_password=#{userPassword}
    </select>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into sys_user
        (
        user_name,
        user_phone,
        user_email,
        user_password
        )
        VALUES
        <foreach collection="userList" item="item" separator=",">
            (
            #{item.userName},
            #{item.userPhone},
            #{item.userEmail},
            #{item.userPassword}
            )
        </foreach>

    </insert>

    <select id="selectUserByLikeUserNameOrUserPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        *
        FROM sys_user
        where is_delete = 'NORMAL'
        <if test="userNameOrUserPhone != null and  userNameOrUserPhone !='' ">
            and (user_phone LIKE concat(#{userNameOrUserPhone}, '%') or user_name LIKE concat(#{userNameOrUserPhone},
            '%') )
        </if>
    </select>

    <select id="selectAllUserList" resultMap="BaseResultMap">
        SELECT
          user_name,
          user_phone,
          user_email,
          user_password
        FROM sys_user
    </select>

    <select id="findByIds" resultMap="BaseResultMap">
        SELECT
          user_name,
          user_phone,
          user_email,
          user_password
        FROM sys_user
        where user_id in (
        <foreach collection="idList" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <update id="batchSynUpdate" parameterType="java.util.List">
        <foreach collection="updateUserList" item="item" separator=";">
            update sys_user set
            user_name=#{item.userName},
            user_phone=#{item.usePhone},
            user_email=#{item.userEmail},
            user_password=#{item.userPassword},
            where user_name=#{item.userName}
        </foreach>
    </update>
</mapper>